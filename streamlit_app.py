import sqlite3
import pandas as pd
import streamlit as st
from datetime import datetime

st.set_page_config(page_title="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π", page_icon="üìÖ", layout="wide")

# –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
st.markdown("""
    <style>
    /* –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ */
    h1 {
        color: #4a7c59;
        text-align: center;
    }
    
    /* –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —Å–µ–ª–µ–∫—Ç–±–æ–∫—Å–æ–≤ –∏ –∫–Ω–æ–ø–∫–∏ */
    .stSelectbox, .stButton {
        border-radius: 10px;
        background-color: #e1f5d3;
        padding: 5px;
    }

    /* –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã */
    .stDataFrame table {
        border: 1px solid #4a7c59;
    }
    .stDataFrame table th {
        background-color: #b2d8b0;
        color: #4a7c59;
    }
    .stDataFrame table td {
        background-color: #f7fff7;
    }
    </style>
    """, unsafe_allow_html=True)

st.title("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_data(query, params):
    conn = sqlite3.connect('schedule.db', check_same_thread=False)
    cursor = conn.cursor()
    cursor.execute(query, params)
    columns = [description[0] for description in cursor.description]
    rows = cursor.fetchall()
    conn.close()
    return pd.DataFrame(rows, columns=columns)

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—ã–±–æ—Ä–æ–≤
def get_choices(query):
    conn = sqlite3.connect('schedule.db', check_same_thread=False)
    cursor = conn.cursor()
    cursor.execute(query)
    rows = cursor.fetchall()
    conn.close()
    return [row[0] for row in rows]

def get_days_of_week():
    conn = sqlite3.connect('schedule.db', check_same_thread=False)
    cursor = conn.cursor()
    cursor.execute("SELECT –Ω–∞–∑–≤–∞–Ω–∏–µ FROM –î–Ω–∏_–Ω–µ–¥–µ–ª–∏ ORDER BY –¥–µ–Ω—å_id")
    rows = cursor.fetchall()
    conn.close()
    return [row[0] for row in rows]

def get_week_parity(date):
    start_date = datetime(2024, 9, 2)
    delta = date - start_date
    week_number = delta.days // 7
    return '–Ω–µ—á–µ—Ç–Ω–∞—è' if week_number % 2 == 0 else '—á–µ—Ç–Ω–∞—è'

def get_day_of_week(date):
    days_of_week = get_days_of_week()
    return days_of_week[date.weekday()]

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
groups = get_choices("SELECT –Ω–∞–∑–≤–∞–Ω–∏–µ FROM –ì—Ä—É–ø–ø—ã")
teachers = get_choices("SELECT –∏–º—è || ' ' || —Ñ–∞–º–∏–ª–∏—è FROM –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏")
audiences = get_choices("SELECT –Ω–æ–º–µ—Ä FROM –ê—É–¥–∏—Ç–æ—Ä–∏–∏")
buildings = get_choices("SELECT DISTINCT –∫–æ—Ä–ø—É—Å FROM –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
types_of_classes = ['–ª–µ–∫—Ü–∏—è', '–ø—Ä–∞–∫—Ç–∏–∫–∞']

# –°–µ–ª–µ–∫—Ç–±–æ–∫—Å—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
st.sidebar.header("–§–∏–ª—å—Ç—Ä—ã")
selected_date = st.sidebar.date_input("–î–∞—Ç–∞ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
selected_group = st.sidebar.selectbox("–ì—Ä—É–ø–ø–∞", [""] + groups)
selected_teacher = st.sidebar.selectbox("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", [""] + teachers)
selected_audience = st.sidebar.selectbox("–ê—É–¥–∏—Ç–æ—Ä–∏—è", [""] + audiences)
selected_building = st.sidebar.selectbox("–ö–æ—Ä–ø—É—Å", [""] + buildings)
selected_type = st.sidebar.selectbox("–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è", [""] + types_of_classes)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏ —á–µ—Ç–Ω–æ—Å—Ç—å, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –¥–∞—Ç–∞
day_of_week, week_parity = None, None
if selected_date:
    selected_date = datetime.strptime(str(selected_date), '%Y-%m-%d')
    day_of_week = get_day_of_week(selected_date)
    week_parity = get_week_parity(selected_date)
    st.write(f"–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞: {selected_date.date()}, {day_of_week}, {week_parity} –Ω–µ–¥–µ–ª—è")

if st.sidebar.button("–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"):
    query = """
        SELECT 
            –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã.–Ω–∞–∑–≤–∞–Ω–∏–µ AS "–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞",
            –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏.–∏–º—è || ' ' || –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏.—Ñ–∞–º–∏–ª–∏—è AS "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å",
            –í—Ä–µ–º—è.–≤—Ä–µ–º—è_–Ω–∞—á–∞–ª–∞ || '-' || –í—Ä–µ–º—è.–≤—Ä–µ–º—è_–æ–∫–æ–Ω—á–∞–Ω–∏—è AS "–í—Ä–µ–º—è",
            –î–Ω–∏_–Ω–µ–¥–µ–ª–∏.–Ω–∞–∑–≤–∞–Ω–∏–µ AS "–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏",
            –ê—É–¥–∏—Ç–æ—Ä–∏–∏.–Ω–æ–º–µ—Ä AS "–ê—É–¥–∏—Ç–æ—Ä–∏—è",
            –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.–∫–æ—Ä–ø—É—Å AS "–ö–æ—Ä–ø—É—Å",
            –ì—Ä—É–ø–ø—ã.–Ω–∞–∑–≤–∞–Ω–∏–µ AS "–ì—Ä—É–ø–ø–∞",
            –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.—Ç–∏–ø_–∑–∞–Ω—è—Ç–∏—è AS "–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è"
        FROM –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        JOIN –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã ON –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞_id = –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã.–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞_id
        JOIN –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ ON –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å_id = –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏.–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å_id
        JOIN –í—Ä–µ–º—è ON –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.–≤—Ä–µ–º—è_id = –í—Ä–µ–º—è.–≤—Ä–µ–º—è_id
        JOIN –î–Ω–∏_–Ω–µ–¥–µ–ª–∏ ON –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.–¥–µ–Ω—å_id = –î–Ω–∏_–Ω–µ–¥–µ–ª–∏.–¥–µ–Ω—å_id
        JOIN –ê—É–¥–∏—Ç–æ—Ä–∏–∏ ON –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.–∞—É–¥–∏—Ç–æ—Ä–∏—è_id = –ê—É–¥–∏—Ç–æ—Ä–∏–∏.–∞—É–¥–∏—Ç–æ—Ä–∏—è_id
        JOIN –ì—Ä—É–ø–ø—ã ON –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.–≥—Ä—É–ø–ø–∞_id = –ì—Ä—É–ø–ø—ã.–≥—Ä—É–ø–ø–∞_id
        WHERE 1=1
    """
    params = []
    if selected_group:
        query += " AND –ì—Ä—É–ø–ø—ã.–Ω–∞–∑–≤–∞–Ω–∏–µ = ?"
        params.append(selected_group)
    if selected_teacher:
        query += " AND –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏.–∏–º—è || ' ' || –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏.—Ñ–∞–º–∏–ª–∏—è = ?"
        params.append(selected_teacher)
    if selected_audience:
        query += " AND –ê—É–¥–∏—Ç–æ—Ä–∏–∏.–Ω–æ–º–µ—Ä = ?"
        params.append(selected_audience)
    if selected_building:
        query += " AND –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.–∫–æ—Ä–ø—É—Å = ?"
        params.append(selected_building)
    if week_parity:
        query += " AND –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.—á–µ—Ç–Ω–æ—Å—Ç—å = ?"
        params.append(week_parity)
    if day_of_week:
        query += " AND –î–Ω–∏_–Ω–µ–¥–µ–ª–∏.–Ω–∞–∑–≤–∞–Ω–∏–µ = ?"
        params.append(day_of_week)
    if selected_type:
        query += " AND –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.—Ç–∏–ø_–∑–∞–Ω—è—Ç–∏—è = ?"
        params.append(selected_type)
    
    schedule = get_data(query, params)
    if schedule.empty:
        st.warning("–ü–æ –≤–∞—à–∏–º —Ñ–∏–ª—å—Ç—Ä–∞–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    else:
        st.dataframe(schedule)
